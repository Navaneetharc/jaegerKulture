<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>JaegerKulture</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">

    <link rel="shortcut icon" type="image/x-icon" href="/assets/imgs/theme/iconJ.jpeg">

    <link href="/assets/css/vendors/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="/assets/css/vendors/material-icon-round.css" rel="stylesheet" type="text/css" />
    <link href="/assets/css/vendors/perfect-scrollbar.css" rel="stylesheet" type="text/css" />
    <link href="/assets/css/vendors/select2.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/css/vendors/normalize.css" rel="stylesheet" type="text/css" />
  
    <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
</head>

<body>

<section class="content-main mt-80 mb-80">

    <div class="card mx-auto card-login">
        <div class="card-body">
            <h4 class="card-title mb-4">Change Password?</h4>
            <form method="post" action="/reset-password" id="resetPasswordForm">
                <div class="mb-3 position-relative">
                    <label for="newPass1">Enter new password</label>
                    <input class="form-control" placeholder="New password" type="password" name="newPass1" id="newPass1" required>
                    <div id="newPass1Error" class="text-danger mt-1"></div>
                </div> 
                <div class="mb-3 position-relative">
                    <label for="newPass2">Confirm password</label>
                    <input class="form-control" placeholder="Re-enter new password" type="password" name="newPass2" id="newPass2" required>
                    <div id="newPass2Error" class="text-danger mt-1"></div>
                </div> 
              
                <div class="mb-4">
                    <button type="submit" class="btn btn-primary w-100" id="submitBtn"> 
                        <span id="submitText">Confirm</span>
                        <span id="submitSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    </button>
                </div> 
                
                <!-- Success message -->
                <div id="successMessage" class="alert alert-success text-center d-none">
                    Password reset successfully! Redirecting to login...
                </div>
                
                <!-- Error message from server -->
                <% if (locals.message && message.length > 0) { %>
                    <div id="alertMessage" class="alert alert-danger text-center">
                        <%= message %>
                    </div>
                <% } %>
                
                <!-- Client-side error message -->
                <div id="clientErrorMessage" class="alert alert-danger text-center d-none"></div>
 
            </form>
            <a href="/login" class="text-center small text-muted mb-15" style="text-decoration: none; float: right;">go back to login page?</a>
        </div>
    </div>
</section>

<%- include('../partials/adminL/footer.ejs') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('resetPasswordForm');
    const submitBtn = document.getElementById('submitBtn');
    const submitText = document.getElementById('submitText');
    const submitSpinner = document.getElementById('submitSpinner');
    const clientErrorMessage = document.getElementById('clientErrorMessage');
    const successMessage = document.getElementById('successMessage');

    function showLoading() {
        submitBtn.disabled = true;
        submitText.classList.add('d-none');
        submitSpinner.classList.remove('d-none');
    }

    function hideLoading() {
        submitBtn.disabled = false;
        submitText.classList.remove('d-none');
        submitSpinner.classList.add('d-none');
    }

    function showClientError(message) {
        clientErrorMessage.textContent = message;
        clientErrorMessage.classList.remove('d-none');
        setTimeout(() => {
            clientErrorMessage.classList.add('d-none');
        }, 5000);
    }

    function showSuccess() {
        successMessage.classList.remove('d-none');
        setTimeout(() => {
            window.location.href = '/login';
        }, 2000);
    }

    function validateForm() {
        let valid = true;
        const newPass1 = document.getElementById('newPass1');
        const newPass2 = document.getElementById('newPass2');
        const newPass1Error = document.getElementById('newPass1Error');
        const newPass2Error = document.getElementById('newPass2Error');

        // Clear previous errors
        newPass1Error.textContent = '';
        newPass2Error.textContent = '';
        clientErrorMessage.classList.add('d-none');

        // Validate first password
        if (!newPass1.value.trim()) {
            newPass1Error.textContent = 'Password cannot be empty.';
            valid = false;
        } else if (newPass1.value.length < 6) {
            newPass1Error.textContent = 'Password must be at least 6 characters long.';
            valid = false;
        }

        // Validate second password
        if (!newPass2.value.trim()) {
            newPass2Error.textContent = 'Please re-enter your password.';
            valid = false;
        } else if (newPass2.value !== newPass1.value) {
            newPass2Error.textContent = 'Passwords do not match.';
            valid = false;
        }

        return valid;
    }

    // Handle form submission
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        if (!validateForm()) {
            return;
        }

        showLoading();

        try {
            const formData = new FormData(form);
            const response = await fetch('/reset-password', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                // Check if response is a redirect or successful
                const contentType = response.headers.get('content-type');
                if (contentType && contentType.includes('application/json')) {
                    const result = await response.json();
                    if (result.success) {
                        showSuccess();
                    } else {
                        showClientError(result.message || 'An error occurred while resetting password.');
                    }
                } else {
                    // Likely a successful redirect
                    showSuccess();
                }
            } else {
                showClientError('Failed to reset password. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            showClientError('Network error. Please check your connection and try again.');
        } finally {
            hideLoading();
        }
    });

    // Real-time validation
    document.getElementById('newPass1').addEventListener('input', function() {
        const newPass1Error = document.getElementById('newPass1Error');
        if (this.value.trim() && this.value.length >= 6) {
            newPass1Error.textContent = '';
        }
    });

    document.getElementById('newPass2').addEventListener('input', function() {
        const newPass1 = document.getElementById('newPass1');
        const newPass2Error = document.getElementById('newPass2Error');
        if (this.value.trim() && this.value === newPass1.value) {
            newPass2Error.textContent = '';
        }
    });
});
</script>

</body>
</html>